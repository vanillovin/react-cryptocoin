{"version":3,"sources":["api.ts","routes/Coins.tsx","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASED_URL","fetchCoins","fetch","then","response","json","Container","styled","div","Header","header","CoinsList","ul","Coin","li","props","theme","btnColor","textColor","Title","h1","accentColor","Loader","span","Img","img","Coins","useQuery","isLoading","data","Helmet","slice","map","coin","to","pathname","id","state","name","rank","src","symbol","toLowerCase","isDarkAtom","atom","key","default","Chart","coinId","isDark","useRecoilValue","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","type","series","price","close","options","mode","chart","height","width","toolbar","show","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Ani","keyframes","Overview","main","Tag","h3","Value","Text","isPositive","checkValue","Price","tickersData","useState","setData","loading","setLoading","useEffect","quotes","USD","market_cap_change_24h","percent_change_30m","percent_change_1h","percent_change_12h","percent_change_24h","OverviewItem","Description","p","Back","button","Tabs","Tab","isActive","history","useHistory","useParams","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","onClick","push","description","total_supply","max_supply","path","Router","exact","component","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","Toggle","App","setDarkAtom","useSetRecoilState","prev","queryClient","QueryClient","ReactDOM","render","client","document","getElementById"],"mappings":"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","file":"static/js/main.bcfda3be.chunk.js","sourcesContent":["const BASED_URL = 'https://api.coinpaprika.com/v1';\n\n// return json data\nexport function fetchCoins() {\n  return fetch(`${BASED_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASED_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASED_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000); // current\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2; // 2 week ago\n  return fetch(\n    `${BASED_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoins } from '../api';\nimport { Helmet } from 'react-helmet';\n\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 500px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 11vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst CoinsList = styled.ul``;\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.btnColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 2px;\n  margin-bottom: 15px;\n  a {\n    display: flex;\n    padding: 15px;\n    align-items: center;\n    font-size: 18px;\n  }\n  &:hover {\n    /*  */\n    opacity: 0.6;\n  }\n  transition: all 0.1s linear;\n`;\nconst Title = styled.h1`\n  font-size: 44px;\n  color: ${(props) => props.theme.accentColor};\n`;\nconst Loader = styled.span`\n  display: block;\n  text-align: center;\n`;\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 15px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>('allCoins', fetchCoins);\n  /* const [coins, setCoins] = useState<ICoin[]>([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    (async () => {\n      const response = await fetch('https://api.coinpaprika.com/v1/coins');\n      const json = await response.json();\n      setCoins(json.slice(0, 100));\n      setLoading(false);\n    })();\n  }, []); */\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Coin</title>\n      </Helmet>\n      <Header>\n        <Title>Coin</Title>\n      </Header>\n      {!isLoading ? (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name, rank: coin.rank },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      ) : (\n        <Loader>Loading...</Loader>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","import { atom } from 'recoil';\n\n// 두 가지를 요구 - 고유키, 기본값\nexport const isDarkAtom = atom({\n  key: 'isDark',\n  default: false,\n});\n","import { useQuery } from 'react-query';\nimport { fetchCoinHistory } from '../api';\nimport ApexChart from 'react-apexcharts';\nimport { Helmet } from 'react-helmet';\nimport { useRecoilValue } from 'recoil';\nimport { isDarkAtom } from '../atoms';\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number; // 종가\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const isDark = useRecoilValue(isDarkAtom);\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    ['ohlcv', coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n\n  return (\n    <>\n      {isLoading ? (\n        'Loading chart...'\n      ) : (\n        <>\n          <Helmet>\n            <title>{coinId} chart</title>\n          </Helmet>\n          <ApexChart\n            type=\"line\"\n            series={[\n              {\n                name: 'Price',\n                data: data?.map((price) => price.close),\n              },\n            ]}\n            options={{\n              theme: {\n                mode: isDark ? 'dark' : 'light',\n              },\n              chart: {\n                height: 300,\n                width: 500,\n                toolbar: {\n                  show: false,\n                },\n                // background: 'transparent',\n              },\n              grid: { show: false },\n              stroke: {\n                curve: 'smooth',\n                width: 4,\n              },\n              yaxis: {\n                show: false,\n              },\n              xaxis: {\n                axisBorder: { show: false },\n                axisTicks: { show: false },\n                labels: { show: false },\n                type: 'datetime',\n                categories: data?.map((price) => price.time_close),\n              },\n              fill: {\n                type: 'gradient',\n                gradient: { gradientToColors: ['royalblue'], stops: [0, 100] },\n              },\n              colors: ['rosybrown'],\n              // 마우스를 올리면 보이는 것. yValue => \"close\": number\n              tooltip: {\n                y: {\n                  formatter: (value) => `$${value.toFixed(2)}`,\n                },\n              },\n            }}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Chart;\n","import { useEffect, useState } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport { fetchCoinTickers } from '../api';\nimport { Helmet } from 'react-helmet';\n\nconst Ani = keyframes`\n  0% {\n    transform: none;\n    opacity: 0;\n  }\n  1% {\n    transform: translateY(-5px);\n    opacity: 0;\n  }\n  100% {\n    transform: none;\n    opacity: 1;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  main:first-child {\n    animation-delay: 0.1s;\n  }\n  main:nth-child(2) {\n    animation-delay: 0.2s;\n  }\n  main:nth-child(3) {\n    animation-delay: 0.3s;\n  }\n  main:nth-child(4) {\n    animation-delay: 0.4s;\n  }\n  main:nth-child(5) {\n    animation-delay: 0.5s;\n  }\n  main:last-child {\n    animation-delay: 0.6s;\n    margin-bottom: 60px;\n  }\n`;\nconst Overview = styled.main`\n  width: 100%;\n  background-color: rgba(188, 143, 143, 0.4);\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 2px;\n  margin-bottom: 15px;\n  transform: translateY(-5px);\n  opacity: 0;\n  animation: ${Ani} 0.5s linear forwards;\n`;\nconst Tag = styled.h3`\n  color: ${(props) => props.theme.textColor};\n  font-size: 14px;\n  font-weight: 400;\n`;\nconst Value = styled.div``;\nconst Text = styled.h3<{ isPositive?: Boolean }>`\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => (props.isPositive ? props.theme.textColor : '#9d7273')};\n`;\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface PriceProps {\n  coinId: string;\n  tickersData?: PriceData;\n}\n\nfunction checkValue(value: number | undefined) {\n  if (value) {\n    return value > 0;\n  }\n}\n\nfunction Price({ coinId, tickersData }: PriceProps) {\n  const [data, setData] = useState<PriceData>();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setData(tickersData);\n    setLoading(false);\n  }, [coinId, tickersData]);\n\n  return (\n    <Container>\n      {loading ? (\n        'Loading Price...'\n      ) : (\n        <>\n          <Overview>\n            <Tag>Price :</Tag>\n            <Value>\n              <Text isPositive={true}>\n                $ {data?.quotes.USD.price.toFixed(3)}\n              </Text>\n            </Value>\n          </Overview>\n          <Overview>\n            <Tag> Max Change rate in last 24h:</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.market_cap_change_24h) === true\n                }\n              >\n                {data?.quotes.USD.market_cap_change_24h} %\n              </Text>\n            </Value>\n          </Overview>\n\n          <Overview>\n            <Tag> Change rate (last 30 Minutes):</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.percent_change_30m) === true\n                }\n              >\n                {data?.quotes.USD.percent_change_30m} %\n              </Text>\n            </Value>\n          </Overview>\n\n          <Overview>\n            <Tag> Change rate (last 1 hours):</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.percent_change_1h) === true\n                }\n              >\n                {data?.quotes.USD.percent_change_1h} %\n              </Text>\n            </Value>\n          </Overview>\n\n          <Overview>\n            <Tag> Change rate (last 12 hours):</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.percent_change_12h) === true\n                }\n              >\n                {data?.quotes.USD.percent_change_12h} %\n              </Text>\n            </Value>\n          </Overview>\n\n          <Overview>\n            <Tag> Change rate (last 24 hours):</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.percent_change_24h) === true\n                }\n              >\n                {data?.quotes.USD.percent_change_24h} %\n              </Text>\n            </Value>\n          </Overview>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Price;\n","import { useQuery } from 'react-query';\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n  useHistory,\n} from 'react-router';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoinInfo, fetchCoinTickers } from '../api';\nimport Chart from './Chart';\nimport Price from './Price';\nimport { Helmet } from 'react-helmet';\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: transparent;\n  padding: 20px;\n  border-radius: 2px;\n  border: 1px solid ${(props) => props.theme.textColor};\n  margin: 20px 0;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 20px;\n  span:first-child {\n    color: ${(props) => props.theme.textColor};\n    font-size: 12px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  padding: 20px 0px;\n  line-height: 1.4;\n  letter-spacing: 0.4px;\n  word-spacing: 0.4px;\n`;\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 500px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  -moz-box-pack: justify;\n`;\nconst Back = styled.button`\n  width: 20%;\n  all: unset;\n  padding: 10px;\n  cursor: pointer;\n  text-align: center;\n  font-size: 24px;\n  &:hover {\n    color: gray;\n  }\n  transition: color 0.2s ease-in-out;\n`;\nconst Title = styled.h1`\n  width: 60%;\n  text-align: center;\n  font-size: 36px;\n  color: ${(props) => props.theme.accentColor};\n`;\nconst Loader = styled.span`\n  display: block;\n  text-align: center;\n`;\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 30px 0px;\n  gap: 10px;\n`;\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  padding: 7px 0px;\n  border-radius: 2px;\n  transition: background-color 0.2s ease-in-out;\n  color: ${(props) => (props.isActive ? props.theme.accentColor : 'gray')};\n  /* background-color: ${(props) =>\n    props.isActive\n      ? 'rgba(255, 255, 255, 0.8)'\n      : 'rgba(255, 255, 255, 0.4)'}; */\n  background-color: ${(props) => props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface ITag {\n  coin_counter: number;\n  ico_counter: number;\n  id: string;\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  contract: string;\n  platform: string;\n  contracts: object;\n  parent: object;\n  tags?: ITag[];\n  team: object;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const history = useHistory();\n  // const { coinId } = useParams<{ coinId: string }>();\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch('/:coinId/price');\n  const chartMatch = useRouteMatch('/:coinId/chart');\n  // parameter - uniqQueryKey, fetcher, optinal object\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    ['info', coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    ['tickers', coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      // query를 5초마다 refetch\n      refetchInterval: 5000,\n    }\n  );\n  /* const [loading, setLoading] = useState(true);\n  const [info, setInfo] = useState<InfoData>();\n  const [priceInfo, setPriceInfo] = useState<PriceData>();\n  useEffect(() => {\n    (async () => {\n      const infoData = await (\n        await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n      ).json();\n      console.log(infoData);\n      const priceData = await (\n        await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n      ).json();\n      console.log(priceData);\n      setInfo(infoData);\n      setPriceInfo(priceData);\n      setLoading(false);\n    })();\n  }, [coinId]); */\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Back onClick={() => history.push('/')}>←</Back>\n        <Title>\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\n        </Title>\n        <Back />\n      </Header>\n      {!loading ? (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol</span>\n              <span>{infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price</span>\n              <span>$ {tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description || 'no description'}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/${coinId}/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n            <Route path={`/${coinId}/price`}>\n              <Price coinId={coinId} tickersData={tickersData} />\n            </Route>\n          </Switch>\n        </>\n      ) : (\n        <Loader>Loading...</Loader>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Coins from './routes/Coins';\nimport Coin from './routes/Coin';\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Coins} />\n        <Route exact path=\"/:coinId\" component={Coin} />\n        <Route path=\"/:coinId/*\" component={Coin} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from 'styled-components';\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#2f3640',\n  textColor: '#f5f6fa',\n  btnColor: 'gray',\n  accentColor: 'rosybrown',\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: 'whitesmoke',\n  textColor: 'black',\n  btnColor: 'white',\n  accentColor: 'rosybrown',\n};\n","import Router from './Router';\nimport { createGlobalStyle } from 'styled-components';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from './theme';\nimport { useState } from 'react';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { isDarkAtom } from './atoms';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;400;500;700&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n  font-family: 'Roboto', sans-serif;\n  line-height: 1.2;\n  font-weight: 300;\n  color: ${(props) => props.theme.textColor};\n  background-color: ${(props) => props.theme.bgColor};\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\na {\n  color: inherit;\n  text-decoration: none;\n}\n`;\nconst Toggle = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 10px;\n  border: 0;\n  cursor: pointer;\n  background-color: transparent;\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\n  // const [isDark, setIsDark] = useState(false);\n  // const toggleDark = () => setIsDark((current) => !current);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <Toggle onClick={toggleDarkAtom}>{isDark ? '🌞' : '🌝'}</Toggle>\n        <GlobalStyle />\n        <Router />\n        {/* <ReactQueryDevtools initialIsOpen /> */}\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <RecoilRoot>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </RecoilRoot>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}